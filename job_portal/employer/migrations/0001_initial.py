# Generated by Django 5.1.4 on 2025-02-13 18:00

import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employee', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, unique=True, verbose_name='Įmonės pavadinimas')),
                ('company_registration_number', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Įmonės registracijos Nr.')),
                ('contact_name', models.CharField(max_length=255, verbose_name='Kontaktinis asmuo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Sukurta')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atnaujinta')),
                ('is_active', models.BooleanField(default=False, verbose_name='Aktyvus')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='employer_logos/')),
                ('has_agreement', models.BooleanField(default=False, verbose_name='Sutartis')),
                ('company_address', models.TextField(blank=True, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('receive_special_offers', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employer',
                'verbose_name_plural': 'Employers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', django_countries.fields.CountryField(max_length=2)),
                ('salary_range', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employer.employer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='EUR', max_length=10)),
                ('invoice_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField()),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('payment_proof', models.FileField(blank=True, null=True, upload_to='payment_proofs/')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='employer.employer')),
            ],
        ),
        migrations.CreateModel(
            name='JobAgreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_date', models.DateField(help_text='Date the job was offered')),
                ('acceptance_date', models.DateField(blank=True, help_text='Date the offer was accepted', null=True)),
                ('start_date', models.DateField(help_text='Official start date of employment')),
                ('end_date', models.DateField(blank=True, help_text='Planned end date for fixed-term contracts', null=True)),
                ('termination_date', models.DateField(blank=True, help_text='Actual termination date if agreement ended early', null=True)),
                ('modification_date', models.DateField(blank=True, help_text='Date of last agreement modification', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('terminated', 'Terminated'), ('expired', 'Expired')], default='pending', help_text='Current status of the job agreement', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='agreements', to='employee.employee')),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agreements', to='employer.employer')),
                ('job_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agreements', to='employer.jobpost')),
            ],
            options={
                'verbose_name': 'Job Agreement',
                'verbose_name_plural': 'Job Agreements',
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['start_date'], name='employer_jo_start_d_fe6a5b_idx'), models.Index(fields=['end_date'], name='employer_jo_end_dat_fd2ded_idx')],
            },
        ),
    ]
